#include <iostream>
#include <unordered_map>
#include <vector>
#include <string>

using namespace std;

// Словарь для хранения подчиненных каждого менеджера
unordered_map<string, vector<string>> subordinates;

// Рекурсивная функция для подсчета подчиненных
int countSubordinates(const string& manager) {
    int count = 0;
    // Если у менеджера есть подчиненные
    if (subordinates.find(manager) != subordinates.end()) {
        // Подсчитываем подчиненных каждого подчиненного
        for (const string& subordinate : subordinates[manager]) {
            count += 1 + countSubordinates(subordinate); // +1 за самого подчиненного
        }
    }
    return count;
}

int main() {
    // Таблица сотрудников и их менеджеров
    unordered_map<string, string> employees = {
        {"A", "B"},
        {"C", "B"},
        {"D", "E"},
        {"B", "E"},
        {"E", "E"}
    };

    // Построение иерархии
    for (const auto& pair : employees) {
        string employee = pair.first;
        string manager = pair.second;
        subordinates[manager].push_back(employee);
    }

    // Подсчет подчиненных для каждого сотрудника
    unordered_map<string, int> result;
    for (const auto& pair : employees) {
        string employee = pair.first;
        result[employee] = countSubordinates(employee);
    }

    // Выводим результат
    for (const auto& pair : result) {
        cout << pair.first << "-" << pair.second << " ";
    }
    cout << endl;

    return 0;
}
